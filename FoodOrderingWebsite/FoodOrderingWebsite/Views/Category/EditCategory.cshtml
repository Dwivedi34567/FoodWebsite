@model FoodOrderingWebsite.ViewModel.CategoryViewModel;
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "CategoryPage";
}

<div class="col-sm-6 col-md-4 col-lg-4">
    <h4 class="sub-title">Category</h4>
    @using (Html.BeginForm("EditCategory", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @if (ViewBag.IsSuccess != null && ViewBag.IsSuccess)
        {
            <div class="alert alert-success" id="successmessage" role="alert">
                Category Updated Successfully!
            </div>
        }
        @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.ErrorMessage
            </div>
        }
        <div>
            <div class="form-group">
                <label>Category Name</label>
                @Html.TextBoxFor(model => model.CategoryName, new { @class = "form-control", placeholder = "Enter Category Name" })
                @Html.HiddenFor(model => model.CategoryID)
                <span class="validation-message text-danger">@Html.ValidationMessageFor(model => model.CategoryName)</span>
            </div>
        </div>
        <div class="form-group">
            <label>Category Image</label>
            <div>
                <input type="file" id="fuCategoryImage" name="CategoryImage" class="form-control" onchange="previewImage(this);"/>
            </div>

        </div>
        <div class="form-check pl-4">
            @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input" })
            <label class="form-check-label" for="cbIsActive">IsActive</label>
        </div>
        <div class="pb-3"></div> <!-- Add some padding between the IsActive checkbox and the buttons -->
        <div>
            <button type="submit" class="btn btn-primary mr-2">Update</button>
            <button type="button" class="btn btn-secondary" onclick="clearForm()">Clear</button>
        </div>
        <div class="pb-5">&nbsp;</div>
        <div>
            <img src="data:image/jpg;base64,@Convert.ToBase64String(Model.ImageData)" alt="@Model.CategoryName" id="imgPreview" />
        </div>

    }
</div>

<script>
    function previewImage(input) {
        var imgPreview = document.getElementById('imgPreview');
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                imgPreview.src = e.target.result;
                imgPreview.style.display = 'block';
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    var successMessage = document.getElementById('successmessage');

    // If the success message element is found, redirect after a delay
    if (successMessage !== null) {
        setTimeout(function () {
            window.location.href = '@Url.Action("Index", "Category")'; 
        }, 4000); // 4000 milliseconds = 4 seconds
    }

</script>